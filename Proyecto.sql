-- -----------------------------------------------------
-- Table User
-- -----------------------------------------------------
CREATE TABLE User_ (
  iduser INTEGER GENERATED BY DEFAULT AS IDENTITY,
  name VARCHAR(45) NULL,
  username VARCHAR(45) NULL,
  password VARCHAR(45) NULL,
  image VARCHAR(200) NULL,
  PRIMARY KEY (iduser));

-- -----------------------------------------------------
-- Table Friend
-- -----------------------------------------------------
CREATE TABLE Friend (
  idfriend INTEGER GENERATED BY DEFAULT AS IDENTITY,
  iduser INT,
  idfriend1 INT,
  PRIMARY KEY (idfriend),
  CONSTRAINT fk_Amigo_Usuario
  FOREIGN KEY (iduser) 
  REFERENCES User_ (iduser),
  CONSTRAINT fk_Friend_User1
  FOREIGN KEY (idfriend1) REFERENCES User_ (iduser));


-- -----------------------------------------------------
-- Table Publication
-- -----------------------------------------------------
CREATE TABLE Publication (
  idpublication INTEGER GENERATED BY DEFAULT AS IDENTITY,
  text VARCHAR(45) NULL,
  iduser INT NOT NULL,
  image VARCHAR(200) NOT NULL,
  PRIMARY KEY (idpublication),
  CONSTRAINT fk_Publication_User1
    FOREIGN KEY (iduser)
    REFERENCES User_ (iduser));


-- -----------------------------------------------------
-- Table Tags
-- -----------------------------------------------------
CREATE TABLE Tags (
  idtags INTEGER GENERATED BY DEFAULT AS IDENTITY,
  tag VARCHAR(45) NULL,
  idpublication INT NOT NULL,
  PRIMARY KEY (idtags),
  CONSTRAINT fk_Tags_Publication1
    FOREIGN KEY (idpublication)
    REFERENCES Publication (idpublication));


-- -----------------------------------------------------
-- Table Message
-- -----------------------------------------------------
CREATE TABLE Message (
  idmessage INTEGER GENERATED BY DEFAULT AS IDENTITY,
  message VARCHAR(45) NULL,
  iduser1 INT NOT NULL,
  iduser2 INT NOT NULL,
  PRIMARY KEY (idmessage),
  CONSTRAINT fk_Message_User1
    FOREIGN KEY (iduser1)
    REFERENCES User_ (iduser),
  CONSTRAINT fk_Message_User2
    FOREIGN KEY (iduser2)
    REFERENCES User_ (iduser));


-- -----------------------------------------------------
-- Table Friend_Request
-- -----------------------------------------------------
CREATE TABLE Friend_Request (
  idrequest INTEGER GENERATED BY DEFAULT AS IDENTITY,
  iduser1 INT NOT NULL,
  iduser2 INT NOT NULL,
  PRIMARY KEY (idrequest),
  CONSTRAINT fk_Friend_Request_User1
    FOREIGN KEY (iduser1)
    REFERENCES User_ (iduser),
  CONSTRAINT fk_Friend_Request_User2
    FOREIGN KEY (iduser2)
    REFERENCES User_ (iduser));

CREATE OR REPLACE PROCEDURE insertar_user(name in varchar, username_ in varchar,
password in varchar, image in varchar)
IS
existe number;
BEGIN
    existe:=0;
    SELECT Count(*) into existe 
    FROM User_
    WHERE username = username_;
    
    if existe = 0 then
        insert into User_(name,username, password, image) values(name, username_, password, image);
        dbms_output.put_line('Usuario registrado con exito: ' || username_);
    else
        existe := -1;
        dbms_output.put_line('No registrado error: ' || existe);
    end if;
END;

CREATE OR REPLACE PROCEDURE Login(
        usu in User_.username%TYPE,
        pass in User_.password%TYPE)
    AS
        c SYS_REFCURSOR;
    BEGIN
        OPEN c for
        select * from User_ u where (u.username=usu and u.password=pass);
        dbms_sql.return_result(c);
    END;


INSERT INTO USER_(name,username,password,image) VALUES ('Diego Obin','DiiAns23','admin','');
INSERT INTO USER_(name,username,password,image) VALUES ('Jose Obin','YeNios','admin','');
INSERT INTO USER_(name,username,password,image) VALUES ('Juan Obin','JcMarro','admin','');
INSERT INTO USER_(name,username,password,image) VALUES ('Dominic Obin','Dom','admin','');
INSERT INTO USER_(name,username,password,image) VALUES ('Jhonn Obin','Jhonn','admin','');


INSERT INTO USER_(name,username,password,image) VALUES ('Prueba 1','Admin','admin','');



INSERT INTO PUBLICATION(text,iduser,image) VALUES ('Nueva publicacion de prueba',1,'assets/public/WhatsApp Image 2021-04-25 at 8.42.19 PM (1).jpeg');
INSERT INTO PUBLICATION(text,iduser,image) VALUES ('Nueva publicacion de prueba numero 2',1,'assets/public/WhatsApp Image 2021-04-25 at 8.42.19 PM (1).jpeg');
INSERT INTO PUBLICATION(text,iduser,image) VALUES ('Nueva publicacion de prueba numero 3',1,'assets/public/WhatsApp Image 2021-04-25 at 8.42.19 PM (1).jpeg');
INSERT INTO PUBLICATION(text,iduser,image) VALUES ('Nueva publicacion de prueba numero 5',2,'assets/public/menor tres.PNG');

INSERT INTO FRIEND(iduser,idfriend1) VALUES (2,1);
INSERT INTO FRIEND(iduser,idfriend1) VALUES (1,3);

UPDATE User_ SET username='DiiAns'
  WHERE username='DiiAns23' ;


COMMIT;

SELECT * FROM User_;
SELECT * FROM Friend;
SELECT * FROM Publication;
SELECT * FROM Friend_Request;

SELECT * FROM FRIEND WHERE iduser = 1 OR idfriend1=1;

SELECT iduser, name FROM USER_ WHERE iduser=21;


COMMIT;


DROP TABLE Friend_Request;
DROP TABLE Message;
DROP TABLE Tags;
DROP TABLE Publication;
DROP TABLE Friend;
DROP TABLE User_;

COMMIT;







